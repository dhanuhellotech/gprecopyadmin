{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\gpreschool\\\\admin\\\\berry-1.0.0\\\\src\\\\views\\\\pages\\\\authentication\\\\login\\\\FirebaseLogin.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Box, Button, Checkbox, Divider, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, makeStyles, OutlinedInput, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Google from \"./../../../../assets/images/icons/social-google.svg\";\nimport { LOGIN } from '../../../../store/actions';\nimport { useDispatch } from 'react-redux';\nimport Login from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  redButton: {\n    fontSize: '1rem',\n    fontWeight: 500,\n    backgroundColor: theme.palette.grey[50],\n    border: '1px solid',\n    borderColor: theme.palette.grey[100],\n    color: theme.palette.grey[600],\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.875rem'\n    }\n  },\n  signDivider: {\n    flexGrow: 1\n  },\n  signText: {\n    cursor: 'unset',\n    margin: theme.spacing(2),\n    padding: '5px 56px',\n    borderColor: theme.palette.grey[100] + ' !important',\n    color: theme.palette.grey[900] + '!important',\n    fontWeight: 500\n  },\n  margin: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1)\n  },\n  forgot: {\n    textDecoration: 'none',\n    color: theme.palette.purple.main\n  },\n  loginIcon: {\n    marginRight: '16px',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: '8px'\n    }\n  },\n  title: {\n    color: theme.palette.grey[600]\n  },\n  login: {\n    backgroundColor: theme.palette.purple.main,\n    '&:hover': {\n      backgroundColor: theme.palette.purple.dark\n    }\n  },\n  loginput: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    '& > label': {\n      top: '23px',\n      left: 0,\n      color: theme.palette.grey[500],\n      '&[data-shrink=\"false\"]': {\n        top: '5px'\n      }\n    },\n    '& > div > input': {\n      padding: '30.5px 14px 11.5px !important'\n    },\n    '& legend': {\n      display: 'none'\n    },\n    '& fieldset': {\n      top: 0\n    }\n  },\n  startAdornment: {\n    color: theme.palette.grey[500],\n    marginTop: '18px',\n    width: 'auto'\n  }\n}));\nconst FirebaseLogin = (props, {\n  className,\n  ...rest\n}) => {\n  _s();\n  const classes = useStyles();\n  const customization = useSelector(state => state.customization);\n  const scriptedRef = useScriptRef();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [checked, setChecked] = React.useState(true);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const googleHandler = async () => {\n    // your Google sign-in logic here\n  };\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      spacing: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Your login logic here\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n\n            // Redirect to the dashboard upon successful login\n            history.push('/dashboard/default');\n            dispatch(Login({\n              isLoggedIn: true\n            }));\n          }\n        } catch (err) {\n          console.error(err);\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        className: clsx(classes.root, className),\n        ...rest,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.email && errors.email),\n          className: classes.loginput,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-email-login\",\n            children: \"Email Address / Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-email-login\",\n            type: \"email\",\n            value: values.email,\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            label: \"Email Address / Username\",\n            inputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-email-login\",\n            children: [' ', errors.email, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.password && errors.password),\n          className: classes.loginput,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-password-login\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password-login\",\n            type: showPassword ? 'text' : 'password',\n            value: values.password,\n            name: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 61\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 78\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this),\n            label: \"Password\",\n            inputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-password-login\",\n            children: [' ', errors.password, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: checked,\n                onChange: event => setChecked(event.target.checked),\n                name: \"checked\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 41\n              }, this),\n              label: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: \"Keep me logged in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            disabled: isSubmitting,\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            className: classes.login,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n};\n_s(FirebaseLogin, \"wKicg7PDPQo7kwh7IYcuxPyT4HA=\", false, function () {\n  return [useStyles, useSelector, useScriptRef, useDispatch, useHistory];\n});\n_c = FirebaseLogin;\nexport default FirebaseLogin;\nvar _c;\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"names":["React","clsx","Yup","Formik","useHistory","useSelector","Box","Button","Checkbox","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","makeStyles","OutlinedInput","Typography","Link","useScriptRef","Visibility","VisibilityOff","Google","LOGIN","useDispatch","Login","jsxDEV","_jsxDEV","useStyles","theme","root","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","purple","main","loginIcon","marginRight","title","login","dark","loginput","top","left","display","startAdornment","width","FirebaseLogin","props","className","rest","_s","classes","customization","state","scriptedRef","showPassword","setShowPassword","useState","checked","setChecked","dispatch","history","googleHandler","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","open","setOpen","handleOpen","handleClose","Fragment","children","container","direction","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","submit","validationSchema","object","shape","string","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","current","success","push","isLoggedIn","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","Boolean","variant","htmlFor","id","type","value","name","onBlur","onChange","label","inputProps","notchedOutline","endAdornment","position","onClick","onMouseDown","edge","alignItems","item","control","target","mt","disableElevation","disabled","size","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/gpreschool/admin/berry-1.0.0/src/views/pages/authentication/login/FirebaseLogin.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\nimport { LOGIN } from '../../../../store/actions';\nimport { useDispatch } from 'react-redux';\nimport Login from '.';\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none',\n        color: theme.palette.purple.main\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseLogin = (props, {className, ...rest}) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\nconst dispatch =useDispatch();\n    const history = useHistory();\n\n    const googleHandler = async () => {\n        // your Google sign-in logic here\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                {/* <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                    </Button>\n                </Grid> */}\n                {/* <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid> */}\n                {/* <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign in with Email address\n                        </Typography>\n                    </Box>\n                </Grid> */}\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        // Your login logic here\n\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n\n                            // Redirect to the dashboard upon successful login\n                            history.push('/dashboard/default');\n                            dispatch(Login({isLoggedIn:true}))\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label='Email Address / Username'\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label='Password'\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={<React.Fragment>Keep me logged in</React.Fragment>}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography\n                                    variant=\"subtitle1\">\n                                    Forgot Password?\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign in\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}