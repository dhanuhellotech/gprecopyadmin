{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.orientation && styles[styleProps.orientation]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, styleProps.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: 'rotate(90deg)'\n  }\n}));\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n      className,\n      direction\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n  const styleProps = _extends({}, props);\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useThemeProps","experimentalStyled","tabScrollButtonClasses","getTabScrollButtonUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","classes","orientation","disabled","slots","root","TabScrollButtonRoot","name","slot","overridesResolver","props","styles","width","flexShrink","opacity","height","transform","_ref","fontSize","_ref2","TabScrollButton","forwardRef","inProps","ref","className","direction","other","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","sx"],"sources":["C:/Users/User/Desktop/gpreschool/admin/berry-1.0.0/node_modules/@material-ui/core/TabScrollButton/TabScrollButton.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.orientation && styles[styleProps.orientation]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, styleProps.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: 'rotate(90deg)'\n  }\n}));\n\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;"],"mappings":"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"},"metadata":{},"sourceType":"module"}