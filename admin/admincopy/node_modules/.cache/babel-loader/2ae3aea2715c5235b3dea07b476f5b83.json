{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\gpreschool\\\\admin\\\\berry-1.0.0\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport { jssPreset, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport LoginPage from './views/login/Login';\nimport theme from './themes';\nimport Routes from './routes';\nimport Snackbar from './ui-component/extended/Snackbar';\nimport NavigationScroll from './layout/NavigationScroll';\nimport Dashboard from './views/dashboard/Default';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()]\n});\nconst cacheRtl = createCache({\n  key: 'muirtl',\n  stylisPlugins: [rtlPlugin]\n});\nconst loadLocaleData = locale => {\n  switch (locale) {\n    default:\n      return import('./utils/locals/en.json');\n  }\n};\nconst App = () => {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState(''); // Define the username state variable\n  const [password, setPassword] = useState(''); // Define the password state variable\n  const [error, setError] = useState(null);\n  const handleLogin = () => {\n    // Perform authentication logic here (e.g., API call, validation)\n    // For simplicity, we'll set isLoggedIn to true immediately upon login.\n    setLoggedIn(true);\n\n    // Show a popup or alert for successful login\n    alert('Login successful!');\n\n    // Use history.push after the state is updated to navigate to the dashboard\n    history.push('/dashboard/default');\n  };\n  const customization = useSelector(state => state.customization);\n  const [messages, setMessages] = useState();\n  useEffect(() => {\n    loadLocaleData(customization.locale).then(d => {\n      setMessages(d.default);\n      console.log(isLoggedIn);\n    });\n  }, [customization]);\n  if (customization.rtlLayout) {\n    document.querySelector('body').setAttribute('dir', 'rtl');\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StylesProvider, {\n      jss: jss,\n      children: /*#__PURE__*/_jsxDEV(CacheProvider, {\n        value: cacheRtl,\n        children: messages && /*#__PURE__*/_jsxDEV(IntlProvider, {\n          locale: customization.locale,\n          defaultLocale: \"en\",\n          messages: messages,\n          children: /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n            injectFirst: true,\n            children: /*#__PURE__*/_jsxDEV(NavigationScroll, {\n              children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n                theme: theme(customization),\n                children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                  children: [\"// Inside the render section of your App component in App.js\", /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/login\",\n                    children: /*#__PURE__*/_jsxDEV(LoginPage, {\n                      username: username // Make sure you have these state variables\n                      ,\n                      password: password,\n                      setUsername: setUsername // Make sure you have these state updater functions\n                      ,\n                      setPassword: setPassword,\n                      error: error,\n                      onLogin: handleLogin\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 3\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 1\n                  }, this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/dashboard/default\",\n                    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 19\n                    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                      to: \"/dashboard/default\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n                    from: \"*\",\n                    to: \"/login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 1\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Snackbar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"nAMHEs6w5RG/6ucEsVq6PMR0I8I=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","IntlProvider","jssPreset","StylesProvider","ThemeProvider","CssBaseline","StyledEngineProvider","BrowserRouter","Router","Route","Redirect","Switch","LoginPage","theme","Routes","Snackbar","NavigationScroll","Dashboard","rtlPlugin","CacheProvider","createCache","create","rtl","jsxDEV","_jsxDEV","jss","plugins","cacheRtl","key","stylisPlugins","loadLocaleData","locale","App","_s","isLoggedIn","setLoggedIn","username","setUsername","password","setPassword","error","setError","handleLogin","alert","history","push","customization","state","messages","setMessages","then","d","default","console","log","rtlLayout","document","querySelector","setAttribute","Fragment","children","value","defaultLocale","injectFirst","fileName","_jsxFileName","lineNumber","columnNumber","path","onLogin","to","from","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/gpreschool/admin/berry-1.0.0/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {IntlProvider} from 'react-intl';\nimport {jssPreset, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport LoginPage from './views/login/Login';\nimport theme from './themes';\nimport Routes from './routes';\nimport Snackbar from './ui-component/extended/Snackbar';\nimport NavigationScroll from './layout/NavigationScroll';\nimport Dashboard from './views/dashboard/Default';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport {CacheProvider} from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nimport {create} from 'jss';\nimport rtl from 'jss-rtl';\n\nconst jss = create({\n    plugins: [...jssPreset().plugins, rtl()]\n});\n\nconst cacheRtl = createCache({\n    key: 'muirtl',\n    stylisPlugins: [rtlPlugin]\n});\n\nconst loadLocaleData = (locale) => {\n    switch (locale) {\n        default:\n            return import('./utils/locals/en.json');\n    }\n};\n\nconst App = () => {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [username, setUsername] = useState(''); // Define the username state variable\n    const [password, setPassword] = useState(''); // Define the password state variable\n    const [error, setError] = useState(null); \n\n    const handleLogin = () => {\n        // Perform authentication logic here (e.g., API call, validation)\n        // For simplicity, we'll set isLoggedIn to true immediately upon login.\n        setLoggedIn(true);\n        \n        // Show a popup or alert for successful login\n        alert('Login successful!');\n    \n        // Use history.push after the state is updated to navigate to the dashboard\n        history.push('/dashboard/default');\n      };\n  \n    const customization = useSelector((state) => state.customization);\n    const [messages, setMessages] = useState();\n\n    useEffect(() => {\n        loadLocaleData(customization.locale).then((d) => {\n            setMessages(d.default);\n            console.log(isLoggedIn)\n        });\n    }, [customization]);\n\n    if (customization.rtlLayout) {\n        document.querySelector('body').setAttribute('dir', 'rtl');\n    }\n\n    return (\n        <React.Fragment>\n            <StylesProvider jss={jss}>\n                <CacheProvider value={cacheRtl}>\n                    {messages && (\n                        <IntlProvider locale={customization.locale} defaultLocale=\"en\" messages={messages}>\n                            <StyledEngineProvider injectFirst>\n                                <NavigationScroll>\n                                    <ThemeProvider theme={theme(customization)}>\n                                        <CssBaseline />\n          \n                                            <Routes />\n                                            <Switch>\n                                            // Inside the render section of your App component in App.js\n<Route path=\"/login\">\n  <LoginPage\n    username={username} // Make sure you have these state variables\n    password={password}\n    setUsername={setUsername} // Make sure you have these state updater functions\n    setPassword={setPassword}\n    error={error}\n    onLogin={handleLogin}\n  />\n</Route>\n\n        <Route path=\"/dashboard/default\">\n    {isLoggedIn ? <Dashboard /> : <Redirect to=\"/dashboard/default\" />}\n</Route>\n<Redirect  from='*' to='/login'/> \n       \n      </Switch>\n                                            <Snackbar />\n                                    </ThemeProvider>\n                                </NavigationScroll>\n                            </StyledEngineProvider>\n                        </IntlProvider>\n                    )}\n                </CacheProvider>\n            </StylesProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}