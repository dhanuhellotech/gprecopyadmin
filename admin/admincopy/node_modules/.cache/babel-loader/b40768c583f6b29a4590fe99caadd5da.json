{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\adminpanel\\\\admin\\\\admincopy\\\\src\\\\views\\\\login\\\\Login.js\",\n  _s = $RefreshSig$();\n// LoginPage.js\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleLogin = () => {\n    // Perform validation and authentication logic here\n    // For simplicity, we'll consider the login successful if the username is not empty.\n    if (username.trim() !== '') {\n      onLogin();\n      history.push('/dashboard'); // Redirect to the dashboard upon successful login\n    } else {\n      alert('Invalid credentials. Please enter a username.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 1\n  }, this);\n};\n_s(LoginPage, \"tv8EzuaX//5WlTHeteRkd5b7x4w=\", false, function () {\n  return [useHistory];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","useHistory","jsxDEV","_jsxDEV","LoginPage","onLogin","_s","username","setUsername","password","setPassword","history","handleLogin","trim","push","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/adminpanel/admin/admincopy/src/views/login/Login.js"],"sourcesContent":["// LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst LoginPage = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleLogin = () => {\r\n    // Perform validation and authentication logic here\r\n    // For simplicity, we'll consider the login successful if the username is not empty.\r\n    if (username.trim() !== '') {\r\n      onLogin();\r\n      history.push('/dashboard'); // Redirect to the dashboard upon successful login\r\n    } else {\r\n      alert('Invalid credentials. Please enter a username.');\r\n    }\r\n  };\r\n\r\n  return (\r\n<div></div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,OAAO,GAAGV,UAAU,CAAC,CAAC;EAE5B,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA,IAAIL,QAAQ,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BR,OAAO,CAAC,CAAC;MACTM,OAAO,CAACG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLC,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAED,oBACFZ,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEX,CAAC;AAACb,EAAA,CAnBIF,SAAS;EAAA,QAGGH,UAAU;AAAA;AAAAmB,EAAA,GAHtBhB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}