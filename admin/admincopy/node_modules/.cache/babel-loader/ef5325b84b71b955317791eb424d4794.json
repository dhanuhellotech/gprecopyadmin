{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\gpreschool\\\\admin\\\\berry-1.0.0\\\\src\\\\views\\\\dashboard\\\\Default.js\",\n  _s = $RefreshSig$();\n// Dashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography, backdropClasses } from '@material-ui/core';\nimport styled from 'styled-components'; // Import styled from styled-components\nimport { gridSpacing } from '../../store/constant';\nimport Admission from '../admission/Admission.jsx';\nimport TotalChartCard from '../../ui-component/cards/TotalChartCard/index.js';\nimport { useMediaQuery } from 'react-responsive';\n// Define your styled component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGrid = {\n  height: \"100%\",\n  width: \"100%\",\n  zIndex: \"1000\",\n  // backgroundColor:\"white\",\n  position: \"fixed\"\n\n  // top:\"80px\",\n  // left:\"280px\",\n};\nconst SmallScreen = {\n  height: \"100%\",\n  width: \"100%\",\n  zIndex: \"1000\",\n  // backgroundColor:\"white\",\n  position: \"fixed\"\n};\nconst Mediumscreen = {\n  height: \"100%\",\n  width: \"100%\",\n  zIndex: \"1000\",\n  // backgroundColor:\"white\",\n  position: \"fixed\"\n};\nconst Dashboard = () => {\n  _s();\n  const [greeting, setGreeting] = useState('');\n  const [smallScreen, setSmallScreen] = useState(StyledGrid);\n  useEffect(() => {\n    if (window.innerWidth > 957) {\n      setSmallScreen(StyledGrid);\n    } else if (window.innerWidth < 957 && window.innerWidth > 640) {\n      setSmallScreen(Mediumscreen);\n    } else {\n      setSmallScreen(SmallScreen);\n    }\n  }, [window.innerWidth]);\n  useEffect(() => {\n    const currentHour = new Date().getHours();\n    setGreeting(getGreeting(currentHour));\n  }, []);\n  const getGreeting = hour => {\n    if (hour >= 5 && hour < 12) {\n      return 'Good Morning Admin';\n    } else if (hour >= 12 && hour < 18) {\n      return 'Good Afternoon Admin';\n    } else {\n      return 'Good Evening Admin';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: smallScreen,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        gutterBottom: true,\n        children: greeting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TotalChartCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"WzHgDG9poUbcF8808fAUxf9Qnm4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Typography","backdropClasses","styled","gridSpacing","Admission","TotalChartCard","useMediaQuery","jsxDEV","_jsxDEV","StyledGrid","height","width","zIndex","position","SmallScreen","Mediumscreen","Dashboard","_s","greeting","setGreeting","smallScreen","setSmallScreen","window","innerWidth","currentHour","Date","getHours","getGreeting","hour","container","style","children","item","xs","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/gpreschool/admin/berry-1.0.0/src/views/dashboard/Default.js"],"sourcesContent":["// Dashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography, backdropClasses } from '@material-ui/core';\nimport styled from 'styled-components'; // Import styled from styled-components\nimport { gridSpacing } from '../../store/constant';\nimport Admission from '../admission/Admission.jsx';\nimport TotalChartCard from '../../ui-component/cards/TotalChartCard/index.js';\nimport { useMediaQuery } from 'react-responsive';\n// Define your styled component\nconst StyledGrid = {\n\nheight: \"100%\",\nwidth:\"100%\",\nzIndex:\"1000\",\n// backgroundColor:\"white\",\nposition:\"fixed\",\n\n// top:\"80px\",\n// left:\"280px\",\n\n}\nconst SmallScreen = {\n\n  height: \"100%\",\n  width:\"100%\",\n  zIndex:\"1000\",\n  // backgroundColor:\"white\",\n  position:\"fixed\",\n  }\n  const Mediumscreen = {\n\n    height: \"100%\",\n    width:\"100%\",\n    zIndex:\"1000\",\n    // backgroundColor:\"white\",\n    position:\"fixed\",\n\n    \n    }\n\nconst Dashboard = () => {\n  const [greeting, setGreeting] = useState('');\nconst[smallScreen,setSmallScreen]=useState(StyledGrid)\n\nuseEffect(()=>{\n  if(window.innerWidth>957){\n    setSmallScreen(StyledGrid)}\n    else if(window.innerWidth<957&&window.innerWidth>640)\n      {\n        setSmallScreen(Mediumscreen)\n      }\n      else{\n        setSmallScreen(SmallScreen)\n      }\n},[window.innerWidth])\n\n  useEffect(() => {\n    const currentHour = new Date().getHours();\n    setGreeting(getGreeting(currentHour));\n  }, []);\n\n  const getGreeting = (hour) => {\n    if (hour >= 5 && hour < 12) {\n      return 'Good Morning Admin';\n    } else if (hour >= 12 && hour < 18) {\n      return 'Good Afternoon Admin';\n    } else {\n      return 'Good Evening Admin';\n    }\n  };\n\n  return (\n    <Grid container style={smallScreen}>\n      \n      <Grid item xs={12}>\n        <Typography variant=\"h1\" gutterBottom>\n          {greeting}\n        </Typography>\n        <TotalChartCard/>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,UAAU,EAAEC,eAAe,QAAQ,mBAAmB;AACrE,OAAOC,MAAM,MAAM,mBAAmB,CAAC,CAAC;AACxC,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,cAAc,MAAM,kDAAkD;AAC7E,SAASC,aAAa,QAAQ,kBAAkB;AAChD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG;EAEnBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAC,MAAM;EACZC,MAAM,EAAC,MAAM;EACb;EACAC,QAAQ,EAAC;;EAET;EACA;AAEA,CAAC;AACD,MAAMC,WAAW,GAAG;EAElBJ,MAAM,EAAE,MAAM;EACdC,KAAK,EAAC,MAAM;EACZC,MAAM,EAAC,MAAM;EACb;EACAC,QAAQ,EAAC;AACT,CAAC;AACD,MAAME,YAAY,GAAG;EAEnBL,MAAM,EAAE,MAAM;EACdC,KAAK,EAAC,MAAM;EACZC,MAAM,EAAC,MAAM;EACb;EACAC,QAAQ,EAAC;AAGT,CAAC;AAEL,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAK,CAACuB,WAAW,EAACC,cAAc,CAAC,GAACxB,QAAQ,CAACY,UAAU,CAAC;EAEtDX,SAAS,CAAC,MAAI;IACZ,IAAGwB,MAAM,CAACC,UAAU,GAAC,GAAG,EAAC;MACvBF,cAAc,CAACZ,UAAU,CAAC;IAAA,CAAC,MACtB,IAAGa,MAAM,CAACC,UAAU,GAAC,GAAG,IAAED,MAAM,CAACC,UAAU,GAAC,GAAG,EAClD;MACEF,cAAc,CAACN,YAAY,CAAC;IAC9B,CAAC,MACG;MACFM,cAAc,CAACP,WAAW,CAAC;IAC7B;EACN,CAAC,EAAC,CAACQ,MAAM,CAACC,UAAU,CAAC,CAAC;EAEpBzB,SAAS,CAAC,MAAM;IACd,MAAM0B,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzCP,WAAW,CAACQ,WAAW,CAACH,WAAW,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAIC,IAAI,IAAK;IAC5B,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,EAAE,EAAE;MAC1B,OAAO,oBAAoB;IAC7B,CAAC,MAAM,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAClC,OAAO,sBAAsB;IAC/B,CAAC,MAAM;MACL,OAAO,oBAAoB;IAC7B;EACF,CAAC;EAED,oBACEpB,OAAA,CAACT,IAAI;IAAC8B,SAAS;IAACC,KAAK,EAAEV,WAAY;IAAAW,QAAA,eAEjCvB,OAAA,CAACT,IAAI;MAACiC,IAAI;MAACC,EAAE,EAAE,EAAG;MAAAF,QAAA,gBAChBvB,OAAA,CAACR,UAAU;QAACkC,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAJ,QAAA,EAClCb;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACb/B,OAAA,CAACH,cAAc;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACtB,EAAA,CA1CID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}